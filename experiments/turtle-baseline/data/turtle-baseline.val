source	transformation	target
Alice flies	sem	fly ( alice )
Alice sees Daniel	sem	see ( alice , daniel )
Alice meets Alice	sem	meet ( alice , alice )
Alice throws Claire	sem	throw ( alice , claire )
Alice knows Daniel	sem	know ( alice , daniel )
Alice knows herself	sem	know ( alice , alice )
Alice likes Bob	sem	like ( alice , bob )
Alice likes Daniel	sem	like ( alice , daniel )
Alice throws Alice	sem	throw ( alice , alice )
Alice throws Daniel	sem	throw ( alice , daniel )
Alice knows Alice	sem	know ( alice , alice )
Bob walks	sem	walk ( bob )
Bob sees Daniel	sem	see ( bob , daniel )
Bob throws Daniel	sem	throw ( bob , daniel )
Bob notices Daniel	sem	notice ( bob , daniel )
Claire runs	sem	run ( claire )
Claire meets Alice	sem	meet ( claire , alice )
Claire throws Claire	sem	throw ( claire , claire )
Claire throws herself	sem	throw ( claire , claire )
Claire sees Alice	sem	see ( claire , alice )
Claire likes Alice	sem	like ( claire , alice )
Claire knows Daniel	sem	know ( claire , daniel )
Daniel eats	sem	eat ( daniel )
Daniel dislikes himself	sem	dislike ( daniel , daniel )
Daniel notices himself	sem	notice ( daniel , daniel )
Daniel sees Alice	sem	see ( daniel , alice )
Daniel notices Bob	sem	notice ( daniel , bob )
Daniel notices Daniel	sem	notice ( daniel , daniel )
Every turtle sings	sem	all x . ( turtle ( x ) -> sing ( x ) )
Every turtle dances	sem	all x . ( turtle ( x ) -> dance ( x ) )
Every turtle likes Daniel	sem	all x . ( turtle ( x ) -> like ( x , daniel ) )
Every turtle throws Claire	sem	all x . ( turtle ( x ) -> throw ( x , claire ) )
Every turtle notices Alice	sem	all x . ( turtle ( x ) -> notice ( x , alice ) )
Every turtle likes herself	sem	all x . ( turtle ( x ) -> like ( x , x ) )
Every turtle throws herself	sem	all x . ( turtle ( x ) -> throw ( x , x ) )
Every turtle knows himself	sem	all x . ( turtle ( x ) -> know ( x , x ) )
Every turtle sees Bob	sem	all x . ( turtle ( x ) -> see ( x , bob ) )
Every turtle likes Claire	sem	all x . ( turtle ( x ) -> like ( x , claire ) )
Every person sings	sem	all x . ( person ( x ) -> sing ( x ) )
Every person dislikes Bob	sem	all x . ( person ( x ) -> dislike ( x , bob ) )
Every person dislikes Daniel	sem	all x . ( person ( x ) -> dislike ( x , daniel ) )
Every person throws Daniel	sem	all x . ( person ( x ) -> throw ( x , daniel ) )
Every person knows Alice	sem	all x . ( person ( x ) -> know ( x , alice ) )
Every person knows Claire	sem	all x . ( person ( x ) -> know ( x , claire ) )
Every person meets himself	sem	all x . ( person ( x ) -> meet ( x , x ) )
Every person likes herself	sem	all x . ( person ( x ) -> like ( x , x ) )
Every person dislikes himself	sem	all x . ( person ( x ) -> dislike ( x , x ) )
Every person sees Daniel	sem	all x . ( person ( x ) -> see ( x , daniel ) )
Every person likes Daniel	sem	all x . ( person ( x ) -> like ( x , daniel ) )
Every person throws Daniel	sem	all x . ( person ( x ) -> throw ( x , daniel ) )
Every person notices Alice	sem	all x . ( person ( x ) -> notice ( x , alice ) )
Every person knows Bob	sem	all x . ( person ( x ) -> know ( x , bob ) )
Every hoplite sees Alice	sem	all x . ( hoplite ( x ) -> see ( x , alice ) )
Every hoplite sees Daniel	sem	all x . ( hoplite ( x ) -> see ( x , daniel ) )
Every hoplite likes Daniel	sem	all x . ( hoplite ( x ) -> like ( x , daniel ) )
Every hoplite dislikes Claire	sem	all x . ( hoplite ( x ) -> dislike ( x , claire ) )
Every hoplite dislikes Daniel	sem	all x . ( hoplite ( x ) -> dislike ( x , daniel ) )
Every hoplite throws Bob	sem	all x . ( hoplite ( x ) -> throw ( x , bob ) )
Every hoplite meets himself	sem	all x . ( hoplite ( x ) -> meet ( x , x ) )
Every hoplite throws himself	sem	all x . ( hoplite ( x ) -> throw ( x , x ) )
Every hoplite likes Daniel	sem	all x . ( hoplite ( x ) -> like ( x , daniel ) )
Every actor sees Alice	sem	all x . ( actor ( x ) -> see ( x , alice ) )
Every actor meets Alice	sem	all x . ( actor ( x ) -> meet ( x , alice ) )
Every actor dislikes Daniel	sem	all x . ( actor ( x ) -> dislike ( x , daniel ) )
Every actor meets himself	sem	all x . ( actor ( x ) -> meet ( x , x ) )
Every actor dislikes himself	sem	all x . ( actor ( x ) -> dislike ( x , x ) )
Every actor throws himself	sem	all x . ( actor ( x ) -> throw ( x , x ) )
Every actor sees Bob	sem	all x . ( actor ( x ) -> see ( x , bob ) )
Every actor meets Alice	sem	all x . ( actor ( x ) -> meet ( x , alice ) )
Every actor throws Alice	sem	all x . ( actor ( x ) -> throw ( x , alice ) )
Every actor notices Alice	sem	all x . ( actor ( x ) -> notice ( x , alice ) )
Every bear throws Claire	sem	all x . ( bear ( x ) -> throw ( x , claire ) )
Every bear notices Alice	sem	all x . ( bear ( x ) -> notice ( x , alice ) )
Every bear dislikes himself	sem	all x . ( bear ( x ) -> dislike ( x , x ) )
Every bear dislikes Daniel	sem	all x . ( bear ( x ) -> dislike ( x , daniel ) )
Every bear notices Bob	sem	all x . ( bear ( x ) -> notice ( x , bob ) )
Every bear notices Daniel	sem	all x . ( bear ( x ) -> notice ( x , daniel ) )
Every condor walks	sem	all x . ( condor ( x ) -> walk ( x ) )
Every condor sleeps	sem	all x . ( condor ( x ) -> sleep ( x ) )
Every condor runs	sem	all x . ( condor ( x ) -> run ( x ) )
Every condor meets Alice	sem	all x . ( condor ( x ) -> meet ( x , alice ) )
Every condor meets Daniel	sem	all x . ( condor ( x ) -> meet ( x , daniel ) )
Every condor knows Bob	sem	all x . ( condor ( x ) -> know ( x , bob ) )
Every condor sees Alice	sem	all x . ( condor ( x ) -> see ( x , alice ) )
Every condor knows Claire	sem	all x . ( condor ( x ) -> know ( x , claire ) )
Every dog meets Bob	sem	all x . ( dog ( x ) -> meet ( x , bob ) )
Every dog dislikes Claire	sem	all x . ( dog ( x ) -> dislike ( x , claire ) )
Every dog notices Claire	sem	all x . ( dog ( x ) -> notice ( x , claire ) )
Every cat sees Daniel	sem	all x . ( cat ( x ) -> see ( x , daniel ) )
Every cat knows himself	sem	all x . ( cat ( x ) -> know ( x , x ) )
Every cat notices Daniel	sem	all x . ( cat ( x ) -> notice ( x , daniel ) )
Every owl eats	sem	all x . ( owl ( x ) -> eat ( x ) )
Every owl sees Daniel	sem	all x . ( owl ( x ) -> see ( x , daniel ) )
Every owl dislikes Claire	sem	all x . ( owl ( x ) -> dislike ( x , claire ) )
Every owl throws Bob	sem	all x . ( owl ( x ) -> throw ( x , bob ) )
Every owl notices Bob	sem	all x . ( owl ( x ) -> notice ( x , bob ) )
Every owl knows Daniel	sem	all x . ( owl ( x ) -> know ( x , daniel ) )
Every owl notices Alice	sem	all x . ( owl ( x ) -> notice ( x , alice ) )
Every owl notices Daniel	sem	all x . ( owl ( x ) -> notice ( x , daniel ) )
Every turtle near Alice sleeps	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> sleep ( x ) )
Every turtle near Alice meets himself	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> meet ( x , x ) )
Every turtle near Alice meets herself	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> meet ( x , x ) )
Every turtle near Alice dislikes Bob	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> dislike ( x , bob ) )
Every turtle near Alice notices Daniel	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> notice ( x , daniel ) )
Every turtle near Bob flies	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> fly ( x ) )
Every turtle near Bob sees Bob	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> see ( x , bob ) )
Every turtle near Bob sees Daniel	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> see ( x , daniel ) )
Every turtle near Bob knows Alice	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> know ( x , alice ) )
Every turtle near Bob knows Claire	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> know ( x , claire ) )
Every turtle near Bob dislikes herself	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> dislike ( x , x ) )
Every turtle near Bob dislikes Bob	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> dislike ( x , bob ) )
Every turtle near Bob throws Daniel	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> throw ( x , daniel ) )
Every turtle near Claire sings	sem	all x . ( ( turtle ( x ) & near ( x , claire ) ) -> sing ( x ) )
Every turtle near Claire dances	sem	all x . ( ( turtle ( x ) & near ( x , claire ) ) -> dance ( x ) )
Every turtle near Claire slumbers	sem	all x . ( ( turtle ( x ) & near ( x , claire ) ) -> slumber ( x ) )
Every turtle near Claire sees Alice	sem	all x . ( ( turtle ( x ) & near ( x , claire ) ) -> see ( x , alice ) )
Every turtle near Claire meets Daniel	sem	all x . ( ( turtle ( x ) & near ( x , claire ) ) -> meet ( x , daniel ) )
Every turtle near Claire notices herself	sem	all x . ( ( turtle ( x ) & near ( x , claire ) ) -> notice ( x , x ) )
Every turtle near Claire dislikes Alice	sem	all x . ( ( turtle ( x ) & near ( x , claire ) ) -> dislike ( x , alice ) )
Every turtle near Claire notices Daniel	sem	all x . ( ( turtle ( x ) & near ( x , claire ) ) -> notice ( x , daniel ) )
Every turtle near Claire knows Daniel	sem	all x . ( ( turtle ( x ) & near ( x , claire ) ) -> know ( x , daniel ) )
Every turtle near Daniel slumbers	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> slumber ( x ) )
Every turtle near Daniel sees Alice	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> see ( x , alice ) )
Every turtle near Daniel throws Alice	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> throw ( x , alice ) )
Every turtle near Daniel knows Claire	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> know ( x , claire ) )
Every turtle near Daniel knows Daniel	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> know ( x , daniel ) )
Every turtle near Daniel meets himself	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> meet ( x , x ) )
Every turtle near Daniel throws herself	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> throw ( x , x ) )
Every turtle near Daniel notices Alice	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> notice ( x , alice ) )
Every turtle near Daniel notices Claire	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> notice ( x , claire ) )
Every turtle near Daniel notices Daniel	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> notice ( x , daniel ) )
Every turtle near Daniel knows Bob	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> know ( x , bob ) )
Every turtle near Daniel knows Daniel	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> know ( x , daniel ) )
Every person near Alice walks	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> walk ( x ) )
Every person near Alice dances	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> dance ( x ) )
Every person near Alice flies	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> fly ( x ) )
Every person near Alice meets Daniel	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> meet ( x , daniel ) )
Every person near Alice dislikes Bob	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> dislike ( x , bob ) )
Every person near Alice knows Alice	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> know ( x , alice ) )
Every person near Alice sees herself	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> see ( x , x ) )
Every person near Alice dislikes Alice	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> dislike ( x , alice ) )
Every person near Alice throws Daniel	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> throw ( x , daniel ) )
Every person near Alice knows Bob	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> know ( x , bob ) )
Every person near Bob runs	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> run ( x ) )
Every person near Bob dances	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> dance ( x ) )
Every person near Bob flies	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> fly ( x ) )
Every person near Bob slumbers	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> slumber ( x ) )
Every person near Bob likes Bob	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> like ( x , bob ) )
Every person near Bob dislikes Daniel	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> dislike ( x , daniel ) )
Every person near Bob sees herself	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> see ( x , x ) )
Every person near Bob meets himself	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> meet ( x , x ) )
Every person near Bob knows herself	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> know ( x , x ) )
Every person near Bob dislikes Bob	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> dislike ( x , bob ) )
Every person near Bob dislikes Claire	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> dislike ( x , claire ) )
Every person near Claire runs	sem	all x . ( ( person ( x ) & near ( x , claire ) ) -> run ( x ) )
Every person near Claire sings	sem	all x . ( ( person ( x ) & near ( x , claire ) ) -> sing ( x ) )
Every person near Claire knows Alice	sem	all x . ( ( person ( x ) & near ( x , claire ) ) -> know ( x , alice ) )
Every person near Daniel dances	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> dance ( x ) )
Every person near Daniel sees Bob	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> see ( x , bob ) )
Every person near Daniel meets Alice	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> meet ( x , alice ) )
Every person near Daniel likes Bob	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> like ( x , bob ) )
Every person near Daniel throws Claire	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> throw ( x , claire ) )
Every person near Daniel notices Alice	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> notice ( x , alice ) )
Every person near Daniel notices himself	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> notice ( x , x ) )
Every person near Daniel dislikes Claire	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> dislike ( x , claire ) )
Every person near Daniel notices Daniel	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> notice ( x , daniel ) )
Every person near Daniel knows Claire	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> know ( x , claire ) )
Every hoplite near Alice likes Bob	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> like ( x , bob ) )
Every hoplite near Alice dislikes Daniel	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> dislike ( x , daniel ) )
Every hoplite near Alice throws Claire	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> throw ( x , claire ) )
Every hoplite near Alice notices himself	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> notice ( x , x ) )
Every hoplite near Alice sees Bob	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> see ( x , bob ) )
Every hoplite near Alice throws Daniel	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> throw ( x , daniel ) )
Every hoplite near Alice notices Bob	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> notice ( x , bob ) )
Every hoplite near Alice knows Alice	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> know ( x , alice ) )
Every hoplite near Bob likes Daniel	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> like ( x , daniel ) )
Every hoplite near Bob throws himself	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> throw ( x , x ) )
Every hoplite near Bob meets Alice	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> meet ( x , alice ) )
Every hoplite near Claire dances	sem	all x . ( ( hoplite ( x ) & near ( x , claire ) ) -> dance ( x ) )
Every hoplite near Claire sees Claire	sem	all x . ( ( hoplite ( x ) & near ( x , claire ) ) -> see ( x , claire ) )
Every hoplite near Claire sees herself	sem	all x . ( ( hoplite ( x ) & near ( x , claire ) ) -> see ( x , x ) )
Every hoplite near Claire dislikes Claire	sem	all x . ( ( hoplite ( x ) & near ( x , claire ) ) -> dislike ( x , claire ) )
Every hoplite near Daniel sees Daniel	sem	all x . ( ( hoplite ( x ) & near ( x , daniel ) ) -> see ( x , daniel ) )
Every hoplite near Daniel meets himself	sem	all x . ( ( hoplite ( x ) & near ( x , daniel ) ) -> meet ( x , x ) )
Every hoplite near Daniel dislikes himself	sem	all x . ( ( hoplite ( x ) & near ( x , daniel ) ) -> dislike ( x , x ) )
Every hoplite near Daniel sees Claire	sem	all x . ( ( hoplite ( x ) & near ( x , daniel ) ) -> see ( x , claire ) )
Every hoplite near Daniel likes Bob	sem	all x . ( ( hoplite ( x ) & near ( x , daniel ) ) -> like ( x , bob ) )
Every actor near Alice flies	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> fly ( x ) )
Every actor near Alice knows Alice	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> know ( x , alice ) )
Every actor near Alice knows Daniel	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> know ( x , daniel ) )
Every actor near Alice likes himself	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> like ( x , x ) )
Every actor near Alice knows herself	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> know ( x , x ) )
Every actor near Alice sees Alice	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> see ( x , alice ) )
Every actor near Alice throws Bob	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> throw ( x , bob ) )
Every actor near Bob sleeps	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> sleep ( x ) )
Every actor near Bob meets Bob	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> meet ( x , bob ) )
Every actor near Bob meets Claire	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> meet ( x , claire ) )
Every actor near Bob dislikes Alice	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> dislike ( x , alice ) )
Every actor near Bob throws Claire	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> throw ( x , claire ) )
Every actor near Bob throws Daniel	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> throw ( x , daniel ) )
Every actor near Bob sees himself	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> see ( x , x ) )
Every actor near Bob sees herself	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> see ( x , x ) )
Every actor near Bob sees Alice	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> see ( x , alice ) )
Every actor near Bob sees Claire	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> see ( x , claire ) )
Every actor near Bob likes Bob	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> like ( x , bob ) )
Every actor near Claire knows Bob	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> know ( x , bob ) )
Every actor near Claire knows Daniel	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> know ( x , daniel ) )
Every actor near Daniel eats	sem	all x . ( ( actor ( x ) & near ( x , daniel ) ) -> eat ( x ) )
Every actor near Daniel meets Alice	sem	all x . ( ( actor ( x ) & near ( x , daniel ) ) -> meet ( x , alice ) )
Every actor near Daniel throws Daniel	sem	all x . ( ( actor ( x ) & near ( x , daniel ) ) -> throw ( x , daniel ) )
Every actor near Daniel knows Bob	sem	all x . ( ( actor ( x ) & near ( x , daniel ) ) -> know ( x , bob ) )
Every actor near Daniel knows Claire	sem	all x . ( ( actor ( x ) & near ( x , daniel ) ) -> know ( x , claire ) )
Every actor near Daniel likes Daniel	sem	all x . ( ( actor ( x ) & near ( x , daniel ) ) -> like ( x , daniel ) )
Every bear near Alice slumbers	sem	all x . ( ( bear ( x ) & near ( x , alice ) ) -> slumber ( x ) )
Every bear near Alice dislikes herself	sem	all x . ( ( bear ( x ) & near ( x , alice ) ) -> dislike ( x , x ) )
Every bear near Alice sees Daniel	sem	all x . ( ( bear ( x ) & near ( x , alice ) ) -> see ( x , daniel ) )
Every bear near Alice throws Bob	sem	all x . ( ( bear ( x ) & near ( x , alice ) ) -> throw ( x , bob ) )
Every bear near Bob sleeps	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> sleep ( x ) )
Every bear near Bob sings	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> sing ( x ) )
Every bear near Bob meets Alice	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> meet ( x , alice ) )
Every bear near Bob likes herself	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> like ( x , x ) )
Every bear near Bob sees Bob	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> see ( x , bob ) )
Every bear near Bob meets Daniel	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> meet ( x , daniel ) )
Every bear near Bob likes Bob	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> like ( x , bob ) )
Every bear near Bob dislikes Daniel	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> dislike ( x , daniel ) )
Every bear near Bob notices Bob	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> notice ( x , bob ) )
Every bear near Claire flies	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> fly ( x ) )
Every bear near Claire meets Claire	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> meet ( x , claire ) )
Every bear near Claire dislikes Alice	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> dislike ( x , alice ) )
Every bear near Claire throws Daniel	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> throw ( x , daniel ) )
Every bear near Claire notices Alice	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> notice ( x , alice ) )
Every bear near Claire sees Bob	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> see ( x , bob ) )
Every bear near Claire likes Alice	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> like ( x , alice ) )
Every bear near Claire likes Bob	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> like ( x , bob ) )
Every bear near Claire dislikes Bob	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> dislike ( x , bob ) )
Every bear near Claire throws Bob	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> throw ( x , bob ) )
Every bear near Claire notices Bob	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> notice ( x , bob ) )
Every bear near Daniel dances	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> dance ( x ) )
Every bear near Daniel likes Bob	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> like ( x , bob ) )
Every bear near Daniel likes Claire	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> like ( x , claire ) )
Every bear near Daniel throws Daniel	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> throw ( x , daniel ) )
Every bear near Daniel sees himself	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> see ( x , x ) )
Every bear near Daniel meets herself	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> meet ( x , x ) )
Every bear near Daniel knows herself	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> know ( x , x ) )
Every bear near Daniel sees Claire	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> see ( x , claire ) )
Every bear near Daniel likes Daniel	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> like ( x , daniel ) )
Every bear near Daniel dislikes Bob	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> dislike ( x , bob ) )
Every bear near Daniel throws Bob	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> throw ( x , bob ) )
Every condor near Alice walks	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> walk ( x ) )
Every condor near Alice eats	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> eat ( x ) )
Every condor near Alice runs	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> run ( x ) )
Every condor near Alice throws Daniel	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> throw ( x , daniel ) )
Every condor near Alice dislikes Alice	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> dislike ( x , alice ) )
Every condor near Alice notices Bob	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> notice ( x , bob ) )
Every condor near Bob dislikes Daniel	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> dislike ( x , daniel ) )
Every condor near Bob likes herself	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> like ( x , x ) )
Every condor near Bob throws herself	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> throw ( x , x ) )
Every condor near Bob notices himself	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> notice ( x , x ) )
Every condor near Bob sees Alice	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> see ( x , alice ) )
Every condor near Bob sees Daniel	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> see ( x , daniel ) )
Every condor near Bob likes Daniel	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> like ( x , daniel ) )
Every condor near Bob throws Bob	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> throw ( x , bob ) )
Every condor near Claire dances	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> dance ( x ) )
Every condor near Claire slumbers	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> slumber ( x ) )
Every condor near Claire notices Alice	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> notice ( x , alice ) )
Every condor near Claire meets herself	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> meet ( x , x ) )
Every condor near Claire knows himself	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> know ( x , x ) )
Every condor near Claire meets Daniel	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> meet ( x , daniel ) )
Every condor near Claire knows Daniel	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> know ( x , daniel ) )
Every condor near Daniel runs	sem	all x . ( ( condor ( x ) & near ( x , daniel ) ) -> run ( x ) )
Every condor near Daniel flies	sem	all x . ( ( condor ( x ) & near ( x , daniel ) ) -> fly ( x ) )
Every condor near Daniel sees Alice	sem	all x . ( ( condor ( x ) & near ( x , daniel ) ) -> see ( x , alice ) )
Every condor near Daniel sees Daniel	sem	all x . ( ( condor ( x ) & near ( x , daniel ) ) -> see ( x , daniel ) )
Every condor near Daniel notices herself	sem	all x . ( ( condor ( x ) & near ( x , daniel ) ) -> notice ( x , x ) )
Every condor near Daniel dislikes Alice	sem	all x . ( ( condor ( x ) & near ( x , daniel ) ) -> dislike ( x , alice ) )
Every condor near Daniel notices Alice	sem	all x . ( ( condor ( x ) & near ( x , daniel ) ) -> notice ( x , alice ) )
Every condor near Daniel notices Daniel	sem	all x . ( ( condor ( x ) & near ( x , daniel ) ) -> notice ( x , daniel ) )
Every condor near Daniel knows Bob	sem	all x . ( ( condor ( x ) & near ( x , daniel ) ) -> know ( x , bob ) )
Every condor near Daniel knows Claire	sem	all x . ( ( condor ( x ) & near ( x , daniel ) ) -> know ( x , claire ) )
Every dog near Alice meets herself	sem	all x . ( ( dog ( x ) & near ( x , alice ) ) -> meet ( x , x ) )
Every dog near Alice sees Daniel	sem	all x . ( ( dog ( x ) & near ( x , alice ) ) -> see ( x , daniel ) )
Every dog near Alice notices Claire	sem	all x . ( ( dog ( x ) & near ( x , alice ) ) -> notice ( x , claire ) )
Every dog near Bob meets Daniel	sem	all x . ( ( dog ( x ) & near ( x , bob ) ) -> meet ( x , daniel ) )
Every dog near Bob notices himself	sem	all x . ( ( dog ( x ) & near ( x , bob ) ) -> notice ( x , x ) )
Every dog near Bob meets Alice	sem	all x . ( ( dog ( x ) & near ( x , bob ) ) -> meet ( x , alice ) )
Every dog near Bob meets Daniel	sem	all x . ( ( dog ( x ) & near ( x , bob ) ) -> meet ( x , daniel ) )
Every dog near Bob likes Claire	sem	all x . ( ( dog ( x ) & near ( x , bob ) ) -> like ( x , claire ) )
Every dog near Bob notices Bob	sem	all x . ( ( dog ( x ) & near ( x , bob ) ) -> notice ( x , bob ) )
Every dog near Claire runs	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> run ( x ) )
Every dog near Claire meets Alice	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> meet ( x , alice ) )
Every dog near Claire meets Bob	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> meet ( x , bob ) )
Every dog near Claire dislikes Claire	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> dislike ( x , claire ) )
Every dog near Claire dislikes Daniel	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> dislike ( x , daniel ) )
Every dog near Claire sees herself	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> see ( x , x ) )
Every dog near Claire meets Alice	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> meet ( x , alice ) )
Every dog near Claire meets Bob	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> meet ( x , bob ) )
Every dog near Claire likes Alice	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> like ( x , alice ) )
Every dog near Claire throws Daniel	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> throw ( x , daniel ) )
Every dog near Daniel dislikes Claire	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> dislike ( x , claire ) )
Every dog near Daniel throws Bob	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> throw ( x , bob ) )
Every dog near Daniel meets himself	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> meet ( x , x ) )
Every dog near Daniel throws himself	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> throw ( x , x ) )
Every dog near Daniel knows herself	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> know ( x , x ) )
Every dog near Daniel sees Bob	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> see ( x , bob ) )
Every dog near Daniel sees Claire	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> see ( x , claire ) )
Every dog near Daniel likes Bob	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> like ( x , bob ) )
Every dog near Daniel notices Bob	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> notice ( x , bob ) )
Every cat near Alice dislikes Bob	sem	all x . ( ( cat ( x ) & near ( x , alice ) ) -> dislike ( x , bob ) )
Every cat near Alice throws himself	sem	all x . ( ( cat ( x ) & near ( x , alice ) ) -> throw ( x , x ) )
Every cat near Alice knows herself	sem	all x . ( ( cat ( x ) & near ( x , alice ) ) -> know ( x , x ) )
Every cat near Alice sees Alice	sem	all x . ( ( cat ( x ) & near ( x , alice ) ) -> see ( x , alice ) )
Every cat near Alice dislikes Alice	sem	all x . ( ( cat ( x ) & near ( x , alice ) ) -> dislike ( x , alice ) )
Every cat near Bob walks	sem	all x . ( ( cat ( x ) & near ( x , bob ) ) -> walk ( x ) )
Every cat near Bob flies	sem	all x . ( ( cat ( x ) & near ( x , bob ) ) -> fly ( x ) )
Every cat near Bob meets Bob	sem	all x . ( ( cat ( x ) & near ( x , bob ) ) -> meet ( x , bob ) )
Every cat near Bob meets herself	sem	all x . ( ( cat ( x ) & near ( x , bob ) ) -> meet ( x , x ) )
Every cat near Bob dislikes herself	sem	all x . ( ( cat ( x ) & near ( x , bob ) ) -> dislike ( x , x ) )
Every cat near Bob throws himself	sem	all x . ( ( cat ( x ) & near ( x , bob ) ) -> throw ( x , x ) )
Every cat near Bob meets Alice	sem	all x . ( ( cat ( x ) & near ( x , bob ) ) -> meet ( x , alice ) )
Every cat near Claire sees Claire	sem	all x . ( ( cat ( x ) & near ( x , claire ) ) -> see ( x , claire ) )
Every cat near Claire likes Bob	sem	all x . ( ( cat ( x ) & near ( x , claire ) ) -> like ( x , bob ) )
Every cat near Claire likes herself	sem	all x . ( ( cat ( x ) & near ( x , claire ) ) -> like ( x , x ) )
Every cat near Claire knows herself	sem	all x . ( ( cat ( x ) & near ( x , claire ) ) -> know ( x , x ) )
Every cat near Claire meets Alice	sem	all x . ( ( cat ( x ) & near ( x , claire ) ) -> meet ( x , alice ) )
Every cat near Claire meets Bob	sem	all x . ( ( cat ( x ) & near ( x , claire ) ) -> meet ( x , bob ) )
Every cat near Claire notices Alice	sem	all x . ( ( cat ( x ) & near ( x , claire ) ) -> notice ( x , alice ) )
Every cat near Claire notices Bob	sem	all x . ( ( cat ( x ) & near ( x , claire ) ) -> notice ( x , bob ) )
Every cat near Daniel runs	sem	all x . ( ( cat ( x ) & near ( x , daniel ) ) -> run ( x ) )
Every cat near Daniel meets Claire	sem	all x . ( ( cat ( x ) & near ( x , daniel ) ) -> meet ( x , claire ) )
Every cat near Daniel dislikes Claire	sem	all x . ( ( cat ( x ) & near ( x , daniel ) ) -> dislike ( x , claire ) )
Every cat near Daniel notices Bob	sem	all x . ( ( cat ( x ) & near ( x , daniel ) ) -> notice ( x , bob ) )
Every cat near Daniel likes Daniel	sem	all x . ( ( cat ( x ) & near ( x , daniel ) ) -> like ( x , daniel ) )
Every owl near Alice likes Alice	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> like ( x , alice ) )
Every owl near Alice likes Claire	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> like ( x , claire ) )
Every owl near Alice dislikes Bob	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> dislike ( x , bob ) )
Every owl near Alice throws Alice	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> throw ( x , alice ) )
Every owl near Alice throws Daniel	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> throw ( x , daniel ) )
Every owl near Alice notices herself	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> notice ( x , x ) )
Every owl near Alice knows himself	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> know ( x , x ) )
Every owl near Alice knows herself	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> know ( x , x ) )
Every owl near Alice sees Alice	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> see ( x , alice ) )
Every owl near Alice notices Bob	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> notice ( x , bob ) )
Every owl near Alice knows Alice	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> know ( x , alice ) )
Every owl near Bob flies	sem	all x . ( ( owl ( x ) & near ( x , bob ) ) -> fly ( x ) )
Every owl near Bob slumbers	sem	all x . ( ( owl ( x ) & near ( x , bob ) ) -> slumber ( x ) )
Every owl near Bob sees Bob	sem	all x . ( ( owl ( x ) & near ( x , bob ) ) -> see ( x , bob ) )
Every owl near Bob dislikes himself	sem	all x . ( ( owl ( x ) & near ( x , bob ) ) -> dislike ( x , x ) )
Every owl near Bob throws himself	sem	all x . ( ( owl ( x ) & near ( x , bob ) ) -> throw ( x , x ) )
Every owl near Bob notices herself	sem	all x . ( ( owl ( x ) & near ( x , bob ) ) -> notice ( x , x ) )
Every owl near Bob dislikes Bob	sem	all x . ( ( owl ( x ) & near ( x , bob ) ) -> dislike ( x , bob ) )
Every owl near Bob notices Claire	sem	all x . ( ( owl ( x ) & near ( x , bob ) ) -> notice ( x , claire ) )
Every owl near Claire meets Claire	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> meet ( x , claire ) )
Every owl near Claire throws Claire	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> throw ( x , claire ) )
Every owl near Claire notices Bob	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> notice ( x , bob ) )
Every owl near Claire knows Claire	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> know ( x , claire ) )
Every owl near Claire sees Alice	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> see ( x , alice ) )
Every owl near Claire meets Bob	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> meet ( x , bob ) )
Every owl near Claire meets Daniel	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> meet ( x , daniel ) )
Every owl near Claire likes Daniel	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> like ( x , daniel ) )
Every owl near Claire knows Alice	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> know ( x , alice ) )
Every owl near Daniel eats	sem	all x . ( ( owl ( x ) & near ( x , daniel ) ) -> eat ( x ) )
Every owl near Daniel sees himself	sem	all x . ( ( owl ( x ) & near ( x , daniel ) ) -> see ( x , x ) )
Every owl near Daniel meets himself	sem	all x . ( ( owl ( x ) & near ( x , daniel ) ) -> meet ( x , x ) )
Every owl near Daniel likes herself	sem	all x . ( ( owl ( x ) & near ( x , daniel ) ) -> like ( x , x ) )
Every owl near Daniel dislikes himself	sem	all x . ( ( owl ( x ) & near ( x , daniel ) ) -> dislike ( x , x ) )
Every owl near Daniel notices herself	sem	all x . ( ( owl ( x ) & near ( x , daniel ) ) -> notice ( x , x ) )
Every owl near Daniel meets Daniel	sem	all x . ( ( owl ( x ) & near ( x , daniel ) ) -> meet ( x , daniel ) )
Everyone sees Alice	sem	all x . ( person ( x ) -> see ( x , alice ) )
Everyone sees Bob	sem	all x . ( person ( x ) -> see ( x , bob ) )
Everyone likes Daniel	sem	all x . ( person ( x ) -> like ( x , daniel ) )
Everyone knows Claire	sem	all x . ( person ( x ) -> know ( x , claire ) )
Everyone meets himself	sem	all x . ( person ( x ) -> meet ( x , x ) )
Everyone notices Daniel	sem	all x . ( person ( x ) -> notice ( x , daniel ) )
Everyone knows Daniel	sem	all x . ( person ( x ) -> know ( x , daniel ) )
Someone sees Bob	sem	exists x . ( person ( x ) & see ( x , bob ) )
Someone meets Alice	sem	exists x . ( person ( x ) & meet ( x , alice ) )
Someone meets Bob	sem	exists x . ( person ( x ) & meet ( x , bob ) )
Someone dislikes Alice	sem	exists x . ( person ( x ) & dislike ( x , alice ) )
Someone throws Daniel	sem	exists x . ( person ( x ) & throw ( x , daniel ) )
Someone knows Claire	sem	exists x . ( person ( x ) & know ( x , claire ) )
Someone meets herself	sem	exists x . ( person ( x ) & meet ( x , x ) )
Someone knows himself	sem	exists x . ( person ( x ) & know ( x , x ) )
Someone meets Alice	sem	exists x . ( person ( x ) & meet ( x , alice ) )
Someone throws Claire	sem	exists x . ( person ( x ) & throw ( x , claire ) )
Someone knows Claire	sem	exists x . ( person ( x ) & know ( x , claire ) )
