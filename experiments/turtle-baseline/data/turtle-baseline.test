source	transformation	target
Alice dislikes Daniel	sem	dislike ( alice , daniel )
Alice knows Claire	sem	know ( alice , claire )
Alice sees Bob	sem	see ( alice , bob )
Alice likes Claire	sem	like ( alice , claire )
Alice knows Daniel	sem	know ( alice , daniel )
Bob runs	sem	run ( bob )
Bob likes Claire	sem	like ( bob , claire )
Bob meets himself	sem	meet ( bob , bob )
Bob dislikes himself	sem	dislike ( bob , bob )
Bob sees Bob	sem	see ( bob , bob )
Bob notices Alice	sem	notice ( bob , alice )
Claire sleeps	sem	sleep ( claire )
Claire eats	sem	eat ( claire )
Claire sings	sem	sing ( claire )
Claire slumbers	sem	slumber ( claire )
Claire likes Alice	sem	like ( claire , alice )
Claire knows Claire	sem	know ( claire , claire )
Claire meets Bob	sem	meet ( claire , bob )
Daniel slumbers	sem	slumber ( daniel )
Daniel dislikes Claire	sem	dislike ( daniel , claire )
Daniel throws Claire	sem	throw ( daniel , claire )
Daniel notices Bob	sem	notice ( daniel , bob )
Daniel knows Bob	sem	know ( daniel , bob )
Daniel knows himself	sem	know ( daniel , daniel )
Daniel meets Alice	sem	meet ( daniel , alice )
Daniel dislikes Daniel	sem	dislike ( daniel , daniel )
Daniel throws Daniel	sem	throw ( daniel , daniel )
Daniel notices Claire	sem	notice ( daniel , claire )
Every turtle walks	sem	all x . ( turtle ( x ) -> walk ( x ) )
Every turtle notices Daniel	sem	all x . ( turtle ( x ) -> notice ( x , daniel ) )
Every turtle meets Daniel	sem	all x . ( turtle ( x ) -> meet ( x , daniel ) )
Every turtle likes Bob	sem	all x . ( turtle ( x ) -> like ( x , bob ) )
Every turtle likes Daniel	sem	all x . ( turtle ( x ) -> like ( x , daniel ) )
Every turtle throws Claire	sem	all x . ( turtle ( x ) -> throw ( x , claire ) )
Every turtle notices Alice	sem	all x . ( turtle ( x ) -> notice ( x , alice ) )
Every person walks	sem	all x . ( person ( x ) -> walk ( x ) )
Every person knows Daniel	sem	all x . ( person ( x ) -> know ( x , daniel ) )
Every person notices himself	sem	all x . ( person ( x ) -> notice ( x , x ) )
Every person sees Alice	sem	all x . ( person ( x ) -> see ( x , alice ) )
Every person sees Bob	sem	all x . ( person ( x ) -> see ( x , bob ) )
Every person meets Claire	sem	all x . ( person ( x ) -> meet ( x , claire ) )
Every person likes Alice	sem	all x . ( person ( x ) -> like ( x , alice ) )
Every person dislikes Claire	sem	all x . ( person ( x ) -> dislike ( x , claire ) )
Every person notices Bob	sem	all x . ( person ( x ) -> notice ( x , bob ) )
Every person knows Alice	sem	all x . ( person ( x ) -> know ( x , alice ) )
Every hoplite meets Daniel	sem	all x . ( hoplite ( x ) -> meet ( x , daniel ) )
Every hoplite dislikes Bob	sem	all x . ( hoplite ( x ) -> dislike ( x , bob ) )
Every hoplite likes herself	sem	all x . ( hoplite ( x ) -> like ( x , x ) )
Every hoplite dislikes Claire	sem	all x . ( hoplite ( x ) -> dislike ( x , claire ) )
Every hoplite dislikes Daniel	sem	all x . ( hoplite ( x ) -> dislike ( x , daniel ) )
Every hoplite throws Claire	sem	all x . ( hoplite ( x ) -> throw ( x , claire ) )
Every actor meets Daniel	sem	all x . ( actor ( x ) -> meet ( x , daniel ) )
Every actor throws Claire	sem	all x . ( actor ( x ) -> throw ( x , claire ) )
Every actor likes himself	sem	all x . ( actor ( x ) -> like ( x , x ) )
Every actor meets Claire	sem	all x . ( actor ( x ) -> meet ( x , claire ) )
Every bear sings	sem	all x . ( bear ( x ) -> sing ( x ) )
Every bear dances	sem	all x . ( bear ( x ) -> dance ( x ) )
Every bear likes Bob	sem	all x . ( bear ( x ) -> like ( x , bob ) )
Every bear likes Claire	sem	all x . ( bear ( x ) -> like ( x , claire ) )
Every bear dislikes Alice	sem	all x . ( bear ( x ) -> dislike ( x , alice ) )
Every bear knows Alice	sem	all x . ( bear ( x ) -> know ( x , alice ) )
Every bear sees herself	sem	all x . ( bear ( x ) -> see ( x , x ) )
Every bear throws himself	sem	all x . ( bear ( x ) -> throw ( x , x ) )
Every bear sees Daniel	sem	all x . ( bear ( x ) -> see ( x , daniel ) )
Every bear throws Bob	sem	all x . ( bear ( x ) -> throw ( x , bob ) )
Every bear throws Claire	sem	all x . ( bear ( x ) -> throw ( x , claire ) )
Every condor sees Daniel	sem	all x . ( condor ( x ) -> see ( x , daniel ) )
Every condor likes Alice	sem	all x . ( condor ( x ) -> like ( x , alice ) )
Every condor dislikes Bob	sem	all x . ( condor ( x ) -> dislike ( x , bob ) )
Every condor sees herself	sem	all x . ( condor ( x ) -> see ( x , x ) )
Every condor notices herself	sem	all x . ( condor ( x ) -> notice ( x , x ) )
Every condor knows himself	sem	all x . ( condor ( x ) -> know ( x , x ) )
Every condor sees Bob	sem	all x . ( condor ( x ) -> see ( x , bob ) )
Every condor sees Claire	sem	all x . ( condor ( x ) -> see ( x , claire ) )
Every condor meets Alice	sem	all x . ( condor ( x ) -> meet ( x , alice ) )
Every condor meets Bob	sem	all x . ( condor ( x ) -> meet ( x , bob ) )
Every condor dislikes Alice	sem	all x . ( condor ( x ) -> dislike ( x , alice ) )
Every condor dislikes Daniel	sem	all x . ( condor ( x ) -> dislike ( x , daniel ) )
Every dog walks	sem	all x . ( dog ( x ) -> walk ( x ) )
Every dog dislikes Alice	sem	all x . ( dog ( x ) -> dislike ( x , alice ) )
Every dog knows Bob	sem	all x . ( dog ( x ) -> know ( x , bob ) )
Every dog dislikes himself	sem	all x . ( dog ( x ) -> dislike ( x , x ) )
Every dog dislikes herself	sem	all x . ( dog ( x ) -> dislike ( x , x ) )
Every dog notices herself	sem	all x . ( dog ( x ) -> notice ( x , x ) )
Every dog sees Claire	sem	all x . ( dog ( x ) -> see ( x , claire ) )
Every dog likes Claire	sem	all x . ( dog ( x ) -> like ( x , claire ) )
Every cat runs	sem	all x . ( cat ( x ) -> run ( x ) )
Every cat likes Bob	sem	all x . ( cat ( x ) -> like ( x , bob ) )
Every cat throws Claire	sem	all x . ( cat ( x ) -> throw ( x , claire ) )
Every cat knows Alice	sem	all x . ( cat ( x ) -> know ( x , alice ) )
Every cat knows Bob	sem	all x . ( cat ( x ) -> know ( x , bob ) )
Every cat dislikes herself	sem	all x . ( cat ( x ) -> dislike ( x , x ) )
Every cat sees Bob	sem	all x . ( cat ( x ) -> see ( x , bob ) )
Every cat likes Bob	sem	all x . ( cat ( x ) -> like ( x , bob ) )
Every cat likes Claire	sem	all x . ( cat ( x ) -> like ( x , claire ) )
Every cat dislikes Alice	sem	all x . ( cat ( x ) -> dislike ( x , alice ) )
Every cat notices Alice	sem	all x . ( cat ( x ) -> notice ( x , alice ) )
Every cat knows Bob	sem	all x . ( cat ( x ) -> know ( x , bob ) )
Every owl walks	sem	all x . ( owl ( x ) -> walk ( x ) )
Every owl flies	sem	all x . ( owl ( x ) -> fly ( x ) )
Every owl likes Alice	sem	all x . ( owl ( x ) -> like ( x , alice ) )
Every owl throws Alice	sem	all x . ( owl ( x ) -> throw ( x , alice ) )
Every owl throws Claire	sem	all x . ( owl ( x ) -> throw ( x , claire ) )
Every owl meets Claire	sem	all x . ( owl ( x ) -> meet ( x , claire ) )
Every owl knows Bob	sem	all x . ( owl ( x ) -> know ( x , bob ) )
Every turtle near Alice dances	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> dance ( x ) )
Every turtle near Alice slumbers	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> slumber ( x ) )
Every turtle near Alice sees Alice	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> see ( x , alice ) )
Every turtle near Alice meets Alice	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> meet ( x , alice ) )
Every turtle near Alice throws Alice	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> throw ( x , alice ) )
Every turtle near Alice throws Bob	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> throw ( x , bob ) )
Every turtle near Alice knows Bob	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> know ( x , bob ) )
Every turtle near Alice likes Alice	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> like ( x , alice ) )
Every turtle near Alice dislikes Daniel	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> dislike ( x , daniel ) )
Every turtle near Alice notices Bob	sem	all x . ( ( turtle ( x ) & near ( x , alice ) ) -> notice ( x , bob ) )
Every turtle near Bob slumbers	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> slumber ( x ) )
Every turtle near Bob likes Claire	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> like ( x , claire ) )
Every turtle near Bob meets himself	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> meet ( x , x ) )
Every turtle near Bob likes Bob	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> like ( x , bob ) )
Every turtle near Bob likes Claire	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> like ( x , claire ) )
Every turtle near Bob throws Alice	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> throw ( x , alice ) )
Every turtle near Bob notices Daniel	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> notice ( x , daniel ) )
Every turtle near Bob knows Daniel	sem	all x . ( ( turtle ( x ) & near ( x , bob ) ) -> know ( x , daniel ) )
Every turtle near Claire likes Bob	sem	all x . ( ( turtle ( x ) & near ( x , claire ) ) -> like ( x , bob ) )
Every turtle near Claire knows Claire	sem	all x . ( ( turtle ( x ) & near ( x , claire ) ) -> know ( x , claire ) )
Every turtle near Claire sees Daniel	sem	all x . ( ( turtle ( x ) & near ( x , claire ) ) -> see ( x , daniel ) )
Every turtle near Claire likes Claire	sem	all x . ( ( turtle ( x ) & near ( x , claire ) ) -> like ( x , claire ) )
Every turtle near Claire notices Bob	sem	all x . ( ( turtle ( x ) & near ( x , claire ) ) -> notice ( x , bob ) )
Every turtle near Daniel eats	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> eat ( x ) )
Every turtle near Daniel likes Bob	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> like ( x , bob ) )
Every turtle near Daniel dislikes Alice	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> dislike ( x , alice ) )
Every turtle near Daniel dislikes Bob	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> dislike ( x , bob ) )
Every turtle near Daniel sees himself	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> see ( x , x ) )
Every turtle near Daniel likes herself	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> like ( x , x ) )
Every turtle near Daniel knows herself	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> know ( x , x ) )
Every turtle near Daniel sees Alice	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> see ( x , alice ) )
Every turtle near Daniel likes Bob	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> like ( x , bob ) )
Every turtle near Daniel knows Claire	sem	all x . ( ( turtle ( x ) & near ( x , daniel ) ) -> know ( x , claire ) )
Every person near Alice throws Claire	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> throw ( x , claire ) )
Every person near Alice notices himself	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> notice ( x , x ) )
Every person near Alice notices herself	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> notice ( x , x ) )
Every person near Alice sees Claire	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> see ( x , claire ) )
Every person near Alice sees Daniel	sem	all x . ( ( person ( x ) & near ( x , alice ) ) -> see ( x , daniel ) )
Every person near Bob sleeps	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> sleep ( x ) )
Every person near Bob meets Alice	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> meet ( x , alice ) )
Every person near Bob dislikes Claire	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> dislike ( x , claire ) )
Every person near Bob notices Alice	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> notice ( x , alice ) )
Every person near Bob notices Claire	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> notice ( x , claire ) )
Every person near Bob notices Daniel	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> notice ( x , daniel ) )
Every person near Bob notices himself	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> notice ( x , x ) )
Every person near Bob sees Alice	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> see ( x , alice ) )
Every person near Bob meets Daniel	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> meet ( x , daniel ) )
Every person near Bob likes Alice	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> like ( x , alice ) )
Every person near Bob knows Daniel	sem	all x . ( ( person ( x ) & near ( x , bob ) ) -> know ( x , daniel ) )
Every person near Claire sees Alice	sem	all x . ( ( person ( x ) & near ( x , claire ) ) -> see ( x , alice ) )
Every person near Claire dislikes Daniel	sem	all x . ( ( person ( x ) & near ( x , claire ) ) -> dislike ( x , daniel ) )
Every person near Claire meets herself	sem	all x . ( ( person ( x ) & near ( x , claire ) ) -> meet ( x , x ) )
Every person near Claire dislikes himself	sem	all x . ( ( person ( x ) & near ( x , claire ) ) -> dislike ( x , x ) )
Every person near Claire meets Alice	sem	all x . ( ( person ( x ) & near ( x , claire ) ) -> meet ( x , alice ) )
Every person near Daniel dislikes Alice	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> dislike ( x , alice ) )
Every person near Daniel throws Daniel	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> throw ( x , daniel ) )
Every person near Daniel knows Bob	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> know ( x , bob ) )
Every person near Daniel likes herself	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> like ( x , x ) )
Every person near Daniel knows herself	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> know ( x , x ) )
Every person near Daniel sees Claire	sem	all x . ( ( person ( x ) & near ( x , daniel ) ) -> see ( x , claire ) )
Every hoplite near Alice sings	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> sing ( x ) )
Every hoplite near Alice sees Claire	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> see ( x , claire ) )
Every hoplite near Alice throws Daniel	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> throw ( x , daniel ) )
Every hoplite near Alice likes himself	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> like ( x , x ) )
Every hoplite near Alice likes herself	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> like ( x , x ) )
Every hoplite near Alice sees Alice	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> see ( x , alice ) )
Every hoplite near Alice sees Claire	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> see ( x , claire ) )
Every hoplite near Alice dislikes Daniel	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> dislike ( x , daniel ) )
Every hoplite near Alice knows Daniel	sem	all x . ( ( hoplite ( x ) & near ( x , alice ) ) -> know ( x , daniel ) )
Every hoplite near Bob dislikes Alice	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> dislike ( x , alice ) )
Every hoplite near Bob throws Alice	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> throw ( x , alice ) )
Every hoplite near Bob throws Claire	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> throw ( x , claire ) )
Every hoplite near Bob notices Bob	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> notice ( x , bob ) )
Every hoplite near Bob sees himself	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> see ( x , x ) )
Every hoplite near Bob sees herself	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> see ( x , x ) )
Every hoplite near Bob sees Alice	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> see ( x , alice ) )
Every hoplite near Bob likes Bob	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> like ( x , bob ) )
Every hoplite near Bob dislikes Claire	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> dislike ( x , claire ) )
Every hoplite near Bob throws Daniel	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> throw ( x , daniel ) )
Every hoplite near Bob knows Alice	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> know ( x , alice ) )
Every hoplite near Bob knows Daniel	sem	all x . ( ( hoplite ( x ) & near ( x , bob ) ) -> know ( x , daniel ) )
Every hoplite near Claire likes Claire	sem	all x . ( ( hoplite ( x ) & near ( x , claire ) ) -> like ( x , claire ) )
Every hoplite near Claire meets himself	sem	all x . ( ( hoplite ( x ) & near ( x , claire ) ) -> meet ( x , x ) )
Every hoplite near Claire notices himself	sem	all x . ( ( hoplite ( x ) & near ( x , claire ) ) -> notice ( x , x ) )
Every hoplite near Claire meets Alice	sem	all x . ( ( hoplite ( x ) & near ( x , claire ) ) -> meet ( x , alice ) )
Every hoplite near Claire dislikes Bob	sem	all x . ( ( hoplite ( x ) & near ( x , claire ) ) -> dislike ( x , bob ) )
Every hoplite near Claire throws Bob	sem	all x . ( ( hoplite ( x ) & near ( x , claire ) ) -> throw ( x , bob ) )
Every hoplite near Claire knows Daniel	sem	all x . ( ( hoplite ( x ) & near ( x , claire ) ) -> know ( x , daniel ) )
Every hoplite near Daniel meets Claire	sem	all x . ( ( hoplite ( x ) & near ( x , daniel ) ) -> meet ( x , claire ) )
Every hoplite near Daniel likes Claire	sem	all x . ( ( hoplite ( x ) & near ( x , daniel ) ) -> like ( x , claire ) )
Every hoplite near Daniel dislikes Bob	sem	all x . ( ( hoplite ( x ) & near ( x , daniel ) ) -> dislike ( x , bob ) )
Every hoplite near Daniel throws Alice	sem	all x . ( ( hoplite ( x ) & near ( x , daniel ) ) -> throw ( x , alice ) )
Every hoplite near Daniel knows Bob	sem	all x . ( ( hoplite ( x ) & near ( x , daniel ) ) -> know ( x , bob ) )
Every hoplite near Daniel likes herself	sem	all x . ( ( hoplite ( x ) & near ( x , daniel ) ) -> like ( x , x ) )
Every hoplite near Daniel dislikes Bob	sem	all x . ( ( hoplite ( x ) & near ( x , daniel ) ) -> dislike ( x , bob ) )
Every hoplite near Daniel throws Claire	sem	all x . ( ( hoplite ( x ) & near ( x , daniel ) ) -> throw ( x , claire ) )
Every hoplite near Daniel knows Claire	sem	all x . ( ( hoplite ( x ) & near ( x , daniel ) ) -> know ( x , claire ) )
Every actor near Alice walks	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> walk ( x ) )
Every actor near Alice sings	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> sing ( x ) )
Every actor near Alice dances	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> dance ( x ) )
Every actor near Alice slumbers	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> slumber ( x ) )
Every actor near Alice meets Bob	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> meet ( x , bob ) )
Every actor near Alice meets Claire	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> meet ( x , claire ) )
Every actor near Alice sees Bob	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> see ( x , bob ) )
Every actor near Alice meets Bob	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> meet ( x , bob ) )
Every actor near Alice notices Claire	sem	all x . ( ( actor ( x ) & near ( x , alice ) ) -> notice ( x , claire ) )
Every actor near Bob sings	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> sing ( x ) )
Every actor near Bob sees Alice	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> see ( x , alice ) )
Every actor near Bob sees Daniel	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> see ( x , daniel ) )
Every actor near Bob likes Alice	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> like ( x , alice ) )
Every actor near Bob likes Daniel	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> like ( x , daniel ) )
Every actor near Bob dislikes herself	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> dislike ( x , x ) )
Every actor near Bob meets Daniel	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> meet ( x , daniel ) )
Every actor near Bob likes Claire	sem	all x . ( ( actor ( x ) & near ( x , bob ) ) -> like ( x , claire ) )
Every actor near Claire sleeps	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> sleep ( x ) )
Every actor near Claire meets Claire	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> meet ( x , claire ) )
Every actor near Claire meets Daniel	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> meet ( x , daniel ) )
Every actor near Claire dislikes Claire	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> dislike ( x , claire ) )
Every actor near Claire throws Claire	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> throw ( x , claire ) )
Every actor near Claire notices Claire	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> notice ( x , claire ) )
Every actor near Claire throws herself	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> throw ( x , x ) )
Every actor near Claire notices himself	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> notice ( x , x ) )
Every actor near Claire knows herself	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> know ( x , x ) )
Every actor near Claire meets Alice	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> meet ( x , alice ) )
Every actor near Claire meets Bob	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> meet ( x , bob ) )
Every actor near Claire likes Bob	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> like ( x , bob ) )
Every actor near Claire throws Daniel	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> throw ( x , daniel ) )
Every actor near Claire notices Daniel	sem	all x . ( ( actor ( x ) & near ( x , claire ) ) -> notice ( x , daniel ) )
Every actor near Daniel sees Daniel	sem	all x . ( ( actor ( x ) & near ( x , daniel ) ) -> see ( x , daniel ) )
Every actor near Daniel notices Alice	sem	all x . ( ( actor ( x ) & near ( x , daniel ) ) -> notice ( x , alice ) )
Every actor near Daniel knows Daniel	sem	all x . ( ( actor ( x ) & near ( x , daniel ) ) -> know ( x , daniel ) )
Every actor near Daniel knows Daniel	sem	all x . ( ( actor ( x ) & near ( x , daniel ) ) -> know ( x , daniel ) )
Every bear near Alice likes Alice	sem	all x . ( ( bear ( x ) & near ( x , alice ) ) -> like ( x , alice ) )
Every bear near Alice notices Claire	sem	all x . ( ( bear ( x ) & near ( x , alice ) ) -> notice ( x , claire ) )
Every bear near Alice knows Alice	sem	all x . ( ( bear ( x ) & near ( x , alice ) ) -> know ( x , alice ) )
Every bear near Alice likes himself	sem	all x . ( ( bear ( x ) & near ( x , alice ) ) -> like ( x , x ) )
Every bear near Alice throws herself	sem	all x . ( ( bear ( x ) & near ( x , alice ) ) -> throw ( x , x ) )
Every bear near Alice likes Alice	sem	all x . ( ( bear ( x ) & near ( x , alice ) ) -> like ( x , alice ) )
Every bear near Alice likes Bob	sem	all x . ( ( bear ( x ) & near ( x , alice ) ) -> like ( x , bob ) )
Every bear near Alice likes Claire	sem	all x . ( ( bear ( x ) & near ( x , alice ) ) -> like ( x , claire ) )
Every bear near Bob dances	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> dance ( x ) )
Every bear near Bob sees Claire	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> see ( x , claire ) )
Every bear near Bob meets herself	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> meet ( x , x ) )
Every bear near Bob knows himself	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> know ( x , x ) )
Every bear near Bob meets Alice	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> meet ( x , alice ) )
Every bear near Bob likes Alice	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> like ( x , alice ) )
Every bear near Bob notices Alice	sem	all x . ( ( bear ( x ) & near ( x , bob ) ) -> notice ( x , alice ) )
Every bear near Claire sings	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> sing ( x ) )
Every bear near Claire dislikes Bob	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> dislike ( x , bob ) )
Every bear near Claire notices Claire	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> notice ( x , claire ) )
Every bear near Claire meets herself	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> meet ( x , x ) )
Every bear near Claire dislikes Claire	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> dislike ( x , claire ) )
Every bear near Claire throws Alice	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> throw ( x , alice ) )
Every bear near Claire notices Claire	sem	all x . ( ( bear ( x ) & near ( x , claire ) ) -> notice ( x , claire ) )
Every bear near Daniel sleeps	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> sleep ( x ) )
Every bear near Daniel flies	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> fly ( x ) )
Every bear near Daniel sees Bob	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> see ( x , bob ) )
Every bear near Daniel likes Alice	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> like ( x , alice ) )
Every bear near Daniel throws Bob	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> throw ( x , bob ) )
Every bear near Daniel knows Bob	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> know ( x , bob ) )
Every bear near Daniel knows Claire	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> know ( x , claire ) )
Every bear near Daniel dislikes herself	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> dislike ( x , x ) )
Every bear near Daniel sees Alice	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> see ( x , alice ) )
Every bear near Daniel sees Bob	sem	all x . ( ( bear ( x ) & near ( x , daniel ) ) -> see ( x , bob ) )
Every condor near Alice meets Bob	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> meet ( x , bob ) )
Every condor near Alice likes Bob	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> like ( x , bob ) )
Every condor near Alice likes Claire	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> like ( x , claire ) )
Every condor near Alice dislikes Alice	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> dislike ( x , alice ) )
Every condor near Alice throws Claire	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> throw ( x , claire ) )
Every condor near Alice notices Bob	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> notice ( x , bob ) )
Every condor near Alice notices Claire	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> notice ( x , claire ) )
Every condor near Alice knows herself	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> know ( x , x ) )
Every condor near Alice likes Bob	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> like ( x , bob ) )
Every condor near Alice throws Daniel	sem	all x . ( ( condor ( x ) & near ( x , alice ) ) -> throw ( x , daniel ) )
Every condor near Bob sings	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> sing ( x ) )
Every condor near Bob sees Bob	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> see ( x , bob ) )
Every condor near Bob meets Bob	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> meet ( x , bob ) )
Every condor near Bob knows Alice	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> know ( x , alice ) )
Every condor near Bob meets herself	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> meet ( x , x ) )
Every condor near Bob notices herself	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> notice ( x , x ) )
Every condor near Bob meets Claire	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> meet ( x , claire ) )
Every condor near Bob meets Daniel	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> meet ( x , daniel ) )
Every condor near Bob notices Claire	sem	all x . ( ( condor ( x ) & near ( x , bob ) ) -> notice ( x , claire ) )
Every condor near Claire walks	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> walk ( x ) )
Every condor near Claire eats	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> eat ( x ) )
Every condor near Claire sees Bob	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> see ( x , bob ) )
Every condor near Claire sees Claire	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> see ( x , claire ) )
Every condor near Claire sees himself	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> see ( x , x ) )
Every condor near Claire likes herself	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> like ( x , x ) )
Every condor near Claire throws himself	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> throw ( x , x ) )
Every condor near Claire likes Claire	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> like ( x , claire ) )
Every condor near Claire throws Claire	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> throw ( x , claire ) )
Every condor near Claire notices Bob	sem	all x . ( ( condor ( x ) & near ( x , claire ) ) -> notice ( x , bob ) )
Every condor near Daniel meets Daniel	sem	all x . ( ( condor ( x ) & near ( x , daniel ) ) -> meet ( x , daniel ) )
Every condor near Daniel throws Alice	sem	all x . ( ( condor ( x ) & near ( x , daniel ) ) -> throw ( x , alice ) )
Every condor near Daniel dislikes Bob	sem	all x . ( ( condor ( x ) & near ( x , daniel ) ) -> dislike ( x , bob ) )
Every dog near Alice walks	sem	all x . ( ( dog ( x ) & near ( x , alice ) ) -> walk ( x ) )
Every dog near Alice dislikes Alice	sem	all x . ( ( dog ( x ) & near ( x , alice ) ) -> dislike ( x , alice ) )
Every dog near Alice throws Alice	sem	all x . ( ( dog ( x ) & near ( x , alice ) ) -> throw ( x , alice ) )
Every dog near Alice notices Claire	sem	all x . ( ( dog ( x ) & near ( x , alice ) ) -> notice ( x , claire ) )
Every dog near Alice knows Bob	sem	all x . ( ( dog ( x ) & near ( x , alice ) ) -> know ( x , bob ) )
Every dog near Alice sees herself	sem	all x . ( ( dog ( x ) & near ( x , alice ) ) -> see ( x , x ) )
Every dog near Alice throws himself	sem	all x . ( ( dog ( x ) & near ( x , alice ) ) -> throw ( x , x ) )
Every dog near Alice throws herself	sem	all x . ( ( dog ( x ) & near ( x , alice ) ) -> throw ( x , x ) )
Every dog near Alice sees Bob	sem	all x . ( ( dog ( x ) & near ( x , alice ) ) -> see ( x , bob ) )
Every dog near Bob runs	sem	all x . ( ( dog ( x ) & near ( x , bob ) ) -> run ( x ) )
Every dog near Bob sees Daniel	sem	all x . ( ( dog ( x ) & near ( x , bob ) ) -> see ( x , daniel ) )
Every dog near Bob throws Bob	sem	all x . ( ( dog ( x ) & near ( x , bob ) ) -> throw ( x , bob ) )
Every dog near Bob notices Bob	sem	all x . ( ( dog ( x ) & near ( x , bob ) ) -> notice ( x , bob ) )
Every dog near Bob dislikes Alice	sem	all x . ( ( dog ( x ) & near ( x , bob ) ) -> dislike ( x , alice ) )
Every dog near Claire eats	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> eat ( x ) )
Every dog near Claire dances	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> dance ( x ) )
Every dog near Claire meets Claire	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> meet ( x , claire ) )
Every dog near Claire throws Bob	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> throw ( x , bob ) )
Every dog near Claire meets herself	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> meet ( x , x ) )
Every dog near Claire sees Alice	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> see ( x , alice ) )
Every dog near Claire likes Bob	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> like ( x , bob ) )
Every dog near Claire dislikes Alice	sem	all x . ( ( dog ( x ) & near ( x , claire ) ) -> dislike ( x , alice ) )
Every dog near Daniel runs	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> run ( x ) )
Every dog near Daniel sees Alice	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> see ( x , alice ) )
Every dog near Daniel meets Bob	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> meet ( x , bob ) )
Every dog near Daniel meets Claire	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> meet ( x , claire ) )
Every dog near Daniel likes Daniel	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> like ( x , daniel ) )
Every dog near Daniel dislikes Bob	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> dislike ( x , bob ) )
Every dog near Daniel throws Alice	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> throw ( x , alice ) )
Every dog near Daniel knows Daniel	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> know ( x , daniel ) )
Every dog near Daniel likes Daniel	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> like ( x , daniel ) )
Every dog near Daniel throws Alice	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> throw ( x , alice ) )
Every dog near Daniel throws Claire	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> throw ( x , claire ) )
Every dog near Daniel knows Daniel	sem	all x . ( ( dog ( x ) & near ( x , daniel ) ) -> know ( x , daniel ) )
Every cat near Alice walks	sem	all x . ( ( cat ( x ) & near ( x , alice ) ) -> walk ( x ) )
Every cat near Alice slumbers	sem	all x . ( ( cat ( x ) & near ( x , alice ) ) -> slumber ( x ) )
Every cat near Alice likes Bob	sem	all x . ( ( cat ( x ) & near ( x , alice ) ) -> like ( x , bob ) )
Every cat near Alice throws Claire	sem	all x . ( ( cat ( x ) & near ( x , alice ) ) -> throw ( x , claire ) )
Every cat near Alice sees Bob	sem	all x . ( ( cat ( x ) & near ( x , alice ) ) -> see ( x , bob ) )
Every cat near Alice meets Claire	sem	all x . ( ( cat ( x ) & near ( x , alice ) ) -> meet ( x , claire ) )
Every cat near Alice likes Bob	sem	all x . ( ( cat ( x ) & near ( x , alice ) ) -> like ( x , bob ) )
Every cat near Alice notices Alice	sem	all x . ( ( cat ( x ) & near ( x , alice ) ) -> notice ( x , alice ) )
Every cat near Alice knows Daniel	sem	all x . ( ( cat ( x ) & near ( x , alice ) ) -> know ( x , daniel ) )
Every cat near Bob runs	sem	all x . ( ( cat ( x ) & near ( x , bob ) ) -> run ( x ) )
Every cat near Bob throws Daniel	sem	all x . ( ( cat ( x ) & near ( x , bob ) ) -> throw ( x , daniel ) )
Every cat near Bob knows herself	sem	all x . ( ( cat ( x ) & near ( x , bob ) ) -> know ( x , x ) )
Every cat near Bob meets Bob	sem	all x . ( ( cat ( x ) & near ( x , bob ) ) -> meet ( x , bob ) )
Every cat near Claire sings	sem	all x . ( ( cat ( x ) & near ( x , claire ) ) -> sing ( x ) )
Every cat near Claire sees Bob	sem	all x . ( ( cat ( x ) & near ( x , claire ) ) -> see ( x , bob ) )
Every cat near Claire throws Bob	sem	all x . ( ( cat ( x ) & near ( x , claire ) ) -> throw ( x , bob ) )
Every cat near Claire sees herself	sem	all x . ( ( cat ( x ) & near ( x , claire ) ) -> see ( x , x ) )
Every cat near Claire throws himself	sem	all x . ( ( cat ( x ) & near ( x , claire ) ) -> throw ( x , x ) )
Every cat near Claire dislikes Claire	sem	all x . ( ( cat ( x ) & near ( x , claire ) ) -> dislike ( x , claire ) )
Every cat near Daniel meets Daniel	sem	all x . ( ( cat ( x ) & near ( x , daniel ) ) -> meet ( x , daniel ) )
Every cat near Daniel likes Claire	sem	all x . ( ( cat ( x ) & near ( x , daniel ) ) -> like ( x , claire ) )
Every cat near Daniel notices Daniel	sem	all x . ( ( cat ( x ) & near ( x , daniel ) ) -> notice ( x , daniel ) )
Every cat near Daniel dislikes himself	sem	all x . ( ( cat ( x ) & near ( x , daniel ) ) -> dislike ( x , x ) )
Every cat near Daniel notices herself	sem	all x . ( ( cat ( x ) & near ( x , daniel ) ) -> notice ( x , x ) )
Every cat near Daniel knows himself	sem	all x . ( ( cat ( x ) & near ( x , daniel ) ) -> know ( x , x ) )
Every cat near Daniel meets Bob	sem	all x . ( ( cat ( x ) & near ( x , daniel ) ) -> meet ( x , bob ) )
Every cat near Daniel notices Alice	sem	all x . ( ( cat ( x ) & near ( x , daniel ) ) -> notice ( x , alice ) )
Every cat near Daniel knows Bob	sem	all x . ( ( cat ( x ) & near ( x , daniel ) ) -> know ( x , bob ) )
Every owl near Alice runs	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> run ( x ) )
Every owl near Alice sees Alice	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> see ( x , alice ) )
Every owl near Alice meets Alice	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> meet ( x , alice ) )
Every owl near Alice notices Daniel	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> notice ( x , daniel ) )
Every owl near Alice meets himself	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> meet ( x , x ) )
Every owl near Alice dislikes Bob	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> dislike ( x , bob ) )
Every owl near Alice dislikes Claire	sem	all x . ( ( owl ( x ) & near ( x , alice ) ) -> dislike ( x , claire ) )
Every owl near Bob walks	sem	all x . ( ( owl ( x ) & near ( x , bob ) ) -> walk ( x ) )
Every owl near Bob dislikes Daniel	sem	all x . ( ( owl ( x ) & near ( x , bob ) ) -> dislike ( x , daniel ) )
Every owl near Bob meets herself	sem	all x . ( ( owl ( x ) & near ( x , bob ) ) -> meet ( x , x ) )
Every owl near Bob sees Alice	sem	all x . ( ( owl ( x ) & near ( x , bob ) ) -> see ( x , alice ) )
Every owl near Claire throws Daniel	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> throw ( x , daniel ) )
Every owl near Claire knows Daniel	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> know ( x , daniel ) )
Every owl near Claire sees himself	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> see ( x , x ) )
Every owl near Claire likes herself	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> like ( x , x ) )
Every owl near Claire notices herself	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> notice ( x , x ) )
Every owl near Claire sees Claire	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> see ( x , claire ) )
Every owl near Claire throws Bob	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> throw ( x , bob ) )
Every owl near Claire throws Claire	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> throw ( x , claire ) )
Every owl near Claire notices Alice	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> notice ( x , alice ) )
Every owl near Claire notices Daniel	sem	all x . ( ( owl ( x ) & near ( x , claire ) ) -> notice ( x , daniel ) )
Every owl near Daniel dislikes Alice	sem	all x . ( ( owl ( x ) & near ( x , daniel ) ) -> dislike ( x , alice ) )
Every owl near Daniel notices Bob	sem	all x . ( ( owl ( x ) & near ( x , daniel ) ) -> notice ( x , bob ) )
Every owl near Daniel notices Claire	sem	all x . ( ( owl ( x ) & near ( x , daniel ) ) -> notice ( x , claire ) )
Every owl near Daniel throws herself	sem	all x . ( ( owl ( x ) & near ( x , daniel ) ) -> throw ( x , x ) )
Every owl near Daniel knows herself	sem	all x . ( ( owl ( x ) & near ( x , daniel ) ) -> know ( x , x ) )
Every owl near Daniel likes Alice	sem	all x . ( ( owl ( x ) & near ( x , daniel ) ) -> like ( x , alice ) )
Every owl near Daniel throws Claire	sem	all x . ( ( owl ( x ) & near ( x , daniel ) ) -> throw ( x , claire ) )
Everyone dislikes Alice	sem	all x . ( person ( x ) -> dislike ( x , alice ) )
Everyone throws Claire	sem	all x . ( person ( x ) -> throw ( x , claire ) )
Everyone notices himself	sem	all x . ( person ( x ) -> notice ( x , x ) )
Everyone knows herself	sem	all x . ( person ( x ) -> know ( x , x ) )
Everyone sees Daniel	sem	all x . ( person ( x ) -> see ( x , daniel ) )
Everyone likes Bob	sem	all x . ( person ( x ) -> like ( x , bob ) )
Someone flies	sem	exists x . ( person ( x ) & fly ( x ) )
Someone meets Claire	sem	exists x . ( person ( x ) & meet ( x , claire ) )
Someone dislikes Claire	sem	exists x . ( person ( x ) & dislike ( x , claire ) )
Someone notices himself	sem	exists x . ( person ( x ) & notice ( x , x ) )
Someone sees Daniel	sem	exists x . ( person ( x ) & see ( x , daniel ) )
Someone dislikes Bob	sem	exists x . ( person ( x ) & dislike ( x , bob ) )
Someone throws Daniel	sem	exists x . ( person ( x ) & throw ( x , daniel ) )
Someone notices Claire	sem	exists x . ( person ( x ) & notice ( x , claire ) )
